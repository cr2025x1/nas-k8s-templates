apiVersion: v1
kind: Service
metadata:
  name: cloud-db
  labels:
    app: {{ services.cloud.domain_name }}
    tier: db
    version: "20180611"
spec:
  ports:
  - port: 5432
    name: postgresql
  selector:
    app: {{ services.cloud.domain_name }}
    tier: db
  clusterIP: None
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cloud-postgresql
  labels:
    app: {{ services.cloud.domain_name }}
    tier: db
    version: "20180611"
spec:
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ services.cloud.domain_name }}
        tier: db
        version: "20180611"
      annotations:
{% for item in services.cloud.pod_annotations %}
        {{ item }}
{% endfor %}
    spec:
      containers:
      - image: postgres:alpine
        name: postgresql
        env:
        - name: POSTGRES_USER
          value: nextcloud
        - name: POSTGRES_DB
          value: nextcloud
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cloud-db-pass
              key: password
        ports:
        - containerPort: 5432
          name: postgresql
        lifecycle:
          preStop:
            exec:
              command: ["su", "-", "postgres", "-c", "\"pg_ctl stop /var/lib/postgresql/data\""]
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: data
{{ services.cloud.postgresql_volume | to_nice_yaml(indent=2, explicit_start=False, explicit_end=False) | indent(width=8, indentfirst=True) }}
---
apiVersion: v1
kind: Service
metadata:
  name: cloud-cache-db
  labels:
    app: {{ services.cloud.domain_name }}
    tier: cache-db
    version: "20180611"
spec:
  ports:
  - port: 6379
    name: redis
  selector:
    app: {{ services.cloud.domain_name }}
    tier: cache-db
  clusterIP: None
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cloud-redis
  labels:
    app: {{ services.cloud.domain_name }}
    tier: cache-db
    version: "20180611"
spec:
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ services.cloud.domain_name }}
        tier: cache-db
        version: "20180611"
      annotations:
{% for item in services.cloud.pod_annotations %}
        {{ item }}
{% endfor %}
    spec:
      containers:
      - image: redis:alpine
        name: redis
        ports:
        - containerPort: 6379
          name: redis
        volumeMounts:
        - name: data
          mountPath: /data
      volumes:
      - name: data
{{ services.cloud.redis_volume | to_nice_yaml(indent=2, explicit_start=False, explicit_end=False) | indent(width=8, indentfirst=True) }}
---
apiVersion: v1
kind: Service
metadata:
  name: cloud-frontend
  labels:
    app: {{ services.cloud.domain_name }}
    tier: frontend
    version: "20180611"
spec:
  ports:
  - port: 80
    nodePort: {{ services.cloud.frontend_nodeport }}
    name: http
  selector:
    app: {{ services.cloud.domain_name }}
    tier: frontend
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cloud-nginx
  labels:
    app: {{ services.cloud.domain_name }}
    tier: frontend
    version: "20180611"
spec:
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ services.cloud.domain_name }}
        tier: frontend
        version: "20180611"
      annotations:
{% for item in services.cloud.pod_annotations %}
        {{ item }}
{% endfor %}
    spec:
      containers:
      - image: nginx:alpine
        name: nginx
        env:
        ports:
        - containerPort: 80
          name: http
        volumeMounts:
        - name: htdocs
          mountPath: /var/www/html
        - name: conf
          mountPath: /etc/nginx/conf.d
        - name: log
          mountPath: /var/log/nginx
{{ services.cloud.other_objects.volume_mounts | to_nice_yaml(indent=2, explicit_start=False, explicit_end=False) | indent(width=8, indentfirst=True) }}
      volumes:
      - name: htdocs
{{ services.cloud.nextcloud_volume | to_nice_yaml(indent=2, explicit_start=False, explicit_end=False) | indent(width=8, indentfirst=True) }}
      - name: conf
{{ services.cloud.frontend_conf_volume | to_nice_yaml(indent=2, explicit_start=False, explicit_end=False) | indent(width=8, indentfirst=True) }}
      - name: log
{{ services.cloud.frontend_log_volume | to_nice_yaml(indent=2, explicit_start=False, explicit_end=False) | indent(width=8, indentfirst=True) }}
{{ services.cloud.other_objects.volumes | to_nice_yaml(indent=2, explicit_start=False, explicit_end=False) | indent(width=6, indentfirst=True) }}
---
apiVersion: v1
kind: Service
metadata:
  name: cloud-webapp
  labels:
    app: {{ services.cloud.domain_name }}
    tier: webapp
    version: "20180611"
spec:
  ports:
  - port: 9000
    name: php-fpm
  selector:
    app: {{ services.cloud.domain_name }}
    tier: webapp
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cloud-nextcloud
  labels:
    app: {{ services.cloud.domain_name }}
    tier: webapp
    version: "20180611"
spec:
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ services.cloud.domain_name }}
        tier: webapp
        version: "20180611"
      annotations:
{% for item in services.cloud.pod_annotations %}
        {{ item }}
{% endfor %}
    spec:
      containers:
      - image: nextcloud:fpm
        name: nextcloud
        env:
        - name: POSTGRES_HOST
          value: cloud-db
        - name: POSTGRES_DB
          value: nextcloud
        - name: POSTGRES_USER
          value: nextcloud
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cloud-db-pass
              key: password
        ports:
        - containerPort: 9000
          name: php-fpm
        volumeMounts:
        - name: htdocs
          mountPath: /var/www/html
{{ services.cloud.other_objects.volume_mounts | to_nice_yaml(indent=2, explicit_start=False, explicit_end=False) | indent(width=8, indentfirst=True) }}
      volumes:
      - name: htdocs
{{ services.cloud.nextcloud_volume | to_nice_yaml(indent=2, explicit_start=False, explicit_end=False) | indent(width=8, indentfirst=True) }}
{{ services.cloud.other_objects.volumes | to_nice_yaml(indent=2, explicit_start=False, explicit_end=False) | indent(width=6, indentfirst=True) }}
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: cloud-cronjob
  labels:
    app: {{ services.cloud.domain_name }}
    tier: cronjob
    version: "20180611"
spec:
  schedule: "*/15 * * * *"
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: {{ services.cloud.domain_name }}
            tier: cronjob
            version: "20180611"
          annotations:
{% for item in services.cloud.pod_annotations %}
            {{ item }}
{% endfor %}
        spec:
          restartPolicy: OnFailure
          containers:
          - name: nextcloud
            image: nextcloud:fpm
            args:
            - "su"
            - "-"
            - "www-data"
            - "-s"
            - "/bin/sh"
            - "-c"
            - "php -f /var/www/html/cron.php"
            volumeMounts:
            - name: htdocs
              mountPath: /var/www/html
{{ services.cloud.other_objects.volume_mounts | to_nice_yaml(indent=2, explicit_start=False, explicit_end=False) | indent(width=12, indentfirst=True) }}
          volumes:
          - name: htdocs
{{ services.cloud.nextcloud_volume | to_nice_yaml(indent=2, explicit_start=False, explicit_end=False) | indent(width=12, indentfirst=True) }}
{{ services.cloud.other_objects.volumes | to_nice_yaml(indent=2, explicit_start=False, explicit_end=False) | indent(width=10, indentfirst=True) }}
---
apiVersion: v1
data:
  password: {{ services.cloud.secrets.db_password | b64encode }}
kind: Secret
metadata:
  name: cloud-db-pass
type: Opaque
